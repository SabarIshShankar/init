# -*- coding: utf-8 -*-
"""Untitled7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TR1wd_K0WX1FlP2QjeTdfT7qosM4vtR3
"""

import numpy as np
import pandas as pd
import scipy.stats as stats
import statsmodels.stats.api as sms
import matplotlib.pyplot as plt
import seaborn as sns
from math import ceil
import warnings
warnings.filterwarnings('ignore')

sns.set_theme(style="whitegrid", palette="muted")
plt.rc('patch', edgecolor="black")

df = pd.read_csv("https://raw.githubusercontent.com/YashMotwani/A-or-B-Test-Results-Analysis/master/ab_data.csv")

df.sample(10)

df.nunique()

df.shape

df.isna().sum()

df.columns.tolist()

pd.crosstab(df['group'], df['landing_page'])

#power analysis

effect_size = sms.proportion_effectsize(0.12, 0.14)

required_n = sms.NormalIndPower().solve_power(
    effect_size,
    power=0.9,
    alpha=0.05,
    ratio=1
)

required_n = ceil(required_n)
print(required_n)

df[['user_id', 'timestamp']].nunique()

session_counts  = df.user_id.value_counts()
double_users = session_counts[session_counts>1].index
double_users

df['user_id'].isin(double_users).value_counts()

df = df[~df['user_id'].isin(double_users)]
df.shape

control_group =  df.query('group == "control"').sample(required_n)
treatment_group = df.query('group == "treatment"').sample(required_n)

control_group.head()

treatment_group.head()

ab_test = pd.concat([control_group, treatment_group], axis=0)
ab_test.reset_index(inplace=True, drop=True)

ab_test.head()

ab_test.group.value_counts()

conversion_rates = ab_test.groupby('group')['converted']
std_p = lambda x: np.std(x, ddof = 1)
#standard deviation of the proportaion
se_p = lambda x: stats.sem(x, ddof = 1) #standard error of the proportion

conversion_rates = conversion_rates.agg([np.mean, std_p, se_p])
conversion_rates.columns = ['cnversion_rate', 'std_deviation', 'std_error']

conversion_rates.style.format('{:.3f}')